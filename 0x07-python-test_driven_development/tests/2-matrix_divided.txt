>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix_divided([[1, 2, "a"], [4, 5, 6]], 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[5.8, 2, 3], [4, 93.875, 6]], 3))
[[1.93, 0.67, 1.0], [1.33, 31.29, 2.0]]

>>> print(matrix_divided([[1, 2, 3], "string"], 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([], 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1, 2], []], 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11]], 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided([1, 2, 3], 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> print(matrix_divided([1, 2, 3], float("inf")))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([1, 2, 3]))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> print(matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> print(matrix_divided([1, 2, 3], "string"))
Traceback (most recent call last):
...
TypeError: div must be a number
